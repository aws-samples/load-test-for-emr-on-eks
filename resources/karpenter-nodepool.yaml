apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: spark-driver-provisioner
spec:
  template:
    metadata:
      labels:
        cluster-worker: "true"
        provisioner: "spark-driver-provisioner"
    spec:
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        - key: karpenter.k8s.aws/instance-family
          operator: In
          values: ["m5","c5","r5"]
        - key: karpenter.k8s.aws/instance-size
          operator: In
          values: ["xlarge"]
        - key: "topology.kubernetes.io/zone"
          operator: In
          values: ["${AWS_REGION}a", "${AWS_REGION}b"]
        - key: "karpenter.k8s.aws/instance-hypervisor"
          operator: In
          values: ["nitro"]
        - key: "karpenter.k8s.aws/instance-generation"
          operator: Gt
          values: ["4"]
      nodeClassRef:
        apiVersion: karpenter.k8s.aws/v1beta1
        kind: EC2NodeClass
        name: spark-worker-nc
  disruption:
    consolidationPolicy: WhenEmpty
    consolidateAfter: 10s
    expireAfter: Never
---
apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: spark-executor-provisioner
spec:
  template:
    metadata:
      labels:
        cluster-worker: "true"
        provisioner: "spark-executor-provisioner"
    spec:
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        - key: karpenter.k8s.aws/instance-family
          operator: In
          values: ["c5","r5"]
        - key: karpenter.k8s.aws/instance-size
          operator: In
          values: ["xlarge"]
        - key: "topology.kubernetes.io/zone"
          operator: In
          values: ["${AWS_REGION}a", "${AWS_REGION}b"]
        - key: "karpenter.k8s.aws/instance-hypervisor"
          operator: In
          values: ["nitro"]
        - key: "karpenter.k8s.aws/instance-generation"
          operator: Gt
          values: ["4"]
      nodeClassRef:
        apiVersion: karpenter.k8s.aws/v1beta1
        kind: EC2NodeClass
        name: spark-worker-nc
  disruption:
    consolidationPolicy: WhenEmpty
    consolidateAfter: 10s
    expireAfter: Never
---
apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: spark-worker-nc
spec:
  amiFamily: AL2023
  role: "${NODE_ROLE_NAME}"
  subnetSelectorTerms:
    - id: "${private_subnet_1}"
    - id: "${private_subnet_2}"
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: "${CLUSTER_NAME}"
  tags:
    karpenter.sh/discovery: "${CLUSTER_NAME}"
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 100Gi
        volumeType: gp3
        encrypted: true
  instanceStorePolicy: RAID0