apiVersion: apps/v1
kind: Deployment
metadata:
  name: locust-master
  namespace: locust
  labels:
    app: locust
    component: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: locust
      component: master
  template:
    metadata:
      labels:
        app: locust
        component: master
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      nodeSelector: 
        operational: "true"
      tolerations:
        - key: "dedicated"
          value: "operational"
          effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: karpenter.sh/nodepool
                operator: In
                values: 
                - "cluster-operational-provisioner"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: emr-containers.amazonaws.com/component
                operator: In
                values: 
                - "spark.operator"
            topologyKey: kubernetes.io/hostname
          - labelSelector:
              matchLabels:
                app: locust
                component: worker
            topologyKey: kubernetes.io/hostname
      serviceAccountName: locust-spark-submitter
      containers:
      - name: locust
        image: locustio/locust:latest
        ports:
        - containerPort: 8089
          name: web
        - containerPort: 5557
          name: master-1
        - containerPort: 5558
          name: master-2
        - containerPort: 8000
          name: metrics
        command:
        - /bin/sh
        - -c
        - |
          echo "Installing dependencies..."
          pip install kubernetes pyyaml prometheus_client
          
          echo "Checking dependency versions..."
          pip list | grep -E 'kubernetes|pyyaml|prometheus_client'
          
          echo "Checking file paths..."
          ls -l /locust
          
          echo "Starting Locust Master..."
          locust -f /locust/locust-submit-script.py --master --host=http://dummy --web-port=8089
        volumeMounts:
        - name: locust-scripts
          mountPath: /locust
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
      volumes:
      - name: locust-scripts
        configMap:
          name: spark-locust-scripts
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: locust-worker
  namespace: locust
  labels:
    app: locust
    component: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: locust
      component: worker
  template:
    metadata:
      labels:
        app: locust
        component: worker
    spec:
      nodeSelector: 
        operational: "true"
      tolerations:
        - key: "dedicated"
          value: "operational"
          effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: karpenter.sh/nodepool
                operator: In
                values: 
                - "cluster-operational-provisioner"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: emr-containers.amazonaws.com/component
                operator: In
                values: 
                - "spark.operator"
            topologyKey: kubernetes.io/hostname
          - labelSelector:
              matchLabels:
                app: locust
                component: master
            topologyKey: kubernetes.io/hostname
          - labelSelector:
              matchLabels:
                app: locust
                component: worker
            topologyKey: kubernetes.io/hostname
      serviceAccountName: locust-spark-submitter
      containers:
      - name: locust
        image: locustio/locust:latest
        command:
        - /bin/sh
        - -c
        - |
          echo "Installing dependencies..."
          pip install kubernetes pyyaml prometheus_client
          
          echo "Checking dependency versions..."
          pip list | grep -E 'kubernetes|pyyaml|prometheus_client'
          
          echo "Checking file paths..."
          ls -l /locust
          
          echo "Starting Locust Worker..."
          locust -f /locust/locust-submit-script.py --worker --master-host=locust-master
        volumeMounts:
        - name: locust-scripts
          mountPath: /locust
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
      volumes:
      - name: locust-scripts
        configMap:
          name: spark-locust-scripts
---
apiVersion: v1
kind: Service
metadata:
  name: locust-master
  namespace: locust
  labels:
    app: locust
    component: master
spec:
  ports:
  - port: 8089
    targetPort: web
    name: web-ui
  - port: 5557
    targetPort: master-1
    name: master-1
  - port: 5558
    targetPort: master-2
    name: master-2
  - port: 8000
    targetPort: metrics
    name: metrics
  selector:
    app: locust
    component: master
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: locust-metrics-monitor
  namespace: prometheus
  labels:
    release: prometheus
spec:
  selector:
    matchLabels:
      app: locust
      component: master
  namespaceSelector:
    matchNames:
    - locust
  endpoints:
  - port: metrics
    path: /metrics
    interval: 15s
